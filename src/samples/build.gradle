/*
 * Copyright 2011- the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
subprojects {
    repositories {
        mavenCentral()
    }
}

configure(project(':util')) {
    apply plugin: 'java'
}

configure(project(':execjar1')) {
    apply plugin: 'executable-jar'

    mainClass = 'net.nisgits.gradle.executablejar.samples.execjar1.Main'

    // TODO these manifest entries should be included
    manifest {
        attributes 'Created-By': 'me', // should this override or fail the build?
                   'Another-One': 'thisone'
    }

    dependencies {
        executableJar "org.slf4j:slf4j-api:1.6.1"
        compile project(':util')
    }
}

configure(project(':execjar2')) {
    apply plugin: 'executable-jar'

    mainClass = 'net.nisgits.gradle.executablejar.samples.execjar2.Main'

    dependencies {
        compile project(':util')
    }

    project.allprojects {
        it.configurations.all {
            it.resolvedConfiguration.resolvedArtifacts.each { artifact ->
                def dependency = artifact.moduleVersion.id
            }
        }
    }
}

buildscript {
    dependencies {
        classpath fileTree(dir: '../../build/libs', include: '*.jar', excludes: ['*javadoc.jar', '*sources.jar'])
    }
}
